{
  "swagger": "2.0",
  "info": {
    "title": "Mall Finder API",
    "description": "API documentation for Mall Finder App",
    "version": "1.0.0"
  },
  "basePath": "/",
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter JWT token **with** `Bearer ` prefix, like: Bearer eyJhbGciOi...etc"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "email",
                "password",
                "confirmPassword",
                "mobileNumber"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "password": {
                  "type": "string"
                },
                "confirmPassword": {
                  "type": "string"
                },
                "mobileNumber": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/forgot-password": {
      "post": {
        "summary": "Send password reset link",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset link sent"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/reset-password/{token}": {
      "post": {
        "summary": "Reset user password",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Password reset token received via email"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "password",
                "confirmPassword"
              ],
              "properties": {
                "password": {
                  "type": "string",
                  "format": "password"
                },
                "confirmPassword": {
                  "type": "string",
                  "format": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successful. You can now log in."
          },
          "400": {
            "description": "Invalid or expired token, or passwords do not match"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "summary": "Get logged-in user's profile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "john.doe@example.com"
                    },
                    "mobileNumber": {
                      "type": "string",
                      "example": "+1234567890"
                    },
                    "profileImage": {
                      "type": "string",
                      "description": "URL of profile image",
                      "example": "https://example.com/profile.jpg"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/updateprofile/{userId}": {
      "put": {
        "summary": "Update user profile",
        "description": "Updates a user's profile details including optional profile image upload.",
        "tags": [
          "Users"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to update"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "User's name"
          },
          {
            "name": "email",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          {
            "name": "mobileNumber",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "User's mobile number"
          },
          {
            "name": "role",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "User's role (e.g., admin, user)"
          },
          {
            "name": "profileImage",
            "in": "formData",
            "required": false,
            "type": "file",
            "description": "Profile image file (JPEG, PNG)"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Profile updated successfully"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "mobileNumber": {
                      "type": "string",
                      "example": "+1234567890"
                    },
                    "role": {
                      "type": "string",
                      "example": "user"
                    },
                    "profileImage": {
                      "type": "string",
                      "example": "https://res.cloudinary.com/demo/image/upload/v1234567890/profile_images/12345_profile.jpg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/users/user/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Fetches a single user by their ID.",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "651fa12e4a2cf0a1ecf01b2e"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID format",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid user ID format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "error": {
                  "type": "string",
                  "example": "CastError: Invalid ObjectId"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/users/deleteUser/{id}": {
      "delete": {
        "summary": "Delete user",
        "description": "Deletes a user by their ID.",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID format",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid user ID format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "error": {
                  "type": "string",
                  "example": "CastError: Invalid ObjectId"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/users/allUsers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Fetch a list of all registered users.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all users",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "65304f120fcbdc001f94a838"
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "role": {
                    "type": "string",
                    "example": "customer"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-05T10:15:30Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-05T10:15:30Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  }
}