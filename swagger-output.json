{
  "swagger": "2.0",
  "info": {
    "title": "Academic Website API",
    "description": "API documentation for Academic Website API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter JWT token **with** `Bearer ` prefix, like: Bearer eyJhbGciOi...etc"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/admin/register": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Register a new admin",
        "description": "Creates a new admin account.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "admin",
            "description": "Admin registration details",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "email",
                "password"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Admin Name"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "admin@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "SecurePass123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Admin registered successfully"
          },
          "400": {
            "description": "Admin already exists or invalid data"
          }
        }
      }
    },
    "/api/admin/login": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Login an admin",
        "description": "Authenticates an admin and returns a JWT token.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "description": "Admin login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "admin@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "SecurePass123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/requests/createRequests": {
      "post": {
        "tags": [
          "Requests"
        ],
        "summary": "Add a new request",
        "description": "Creates a new request in the system.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request data to be added",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "fullName",
                "email",
                "mobileNumber",
                "schoolName",
                "message",
                "classStandard",
                "date"
              ],
              "properties": {
                "fullName": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "john.doe@example.com"
                },
                "mobileNumber": {
                  "type": "string",
                  "example": "1234567890"
                },
                "schoolName": {
                  "type": "string",
                  "example": "XYZ School"
                },
                "message": {
                  "type": "string",
                  "example": "Request for admission information."
                },
                "classStandard": {
                  "type": "string",
                  "example": "10"
                },
                "date": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-04-01T12:00:00Z"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Request created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "req12345"
                },
                "fullName": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "john.doe@example.com"
                },
                "mobileNumber": {
                  "type": "string",
                  "example": "1234567890"
                },
                "schoolName": {
                  "type": "string",
                  "example": "XYZ School"
                },
                "message": {
                  "type": "string",
                  "example": "Request for admission information."
                },
                "classStandard": {
                  "type": "string",
                  "example": "10"
                },
                "date": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-04-01T12:00:00Z"
                },
                "createdBy": {
                  "type": "string",
                  "example": "user12345"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/requests/requests": {
      "get": {
        "summary": "Get all requests",
        "tags": [
          "Requests"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all requests",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "req12345"
                  },
                  "fullName": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "mobileNumber": {
                    "type": "string",
                    "example": "1234567890"
                  },
                  "schoolName": {
                    "type": "string",
                    "example": "XYZ School"
                  },
                  "message": {
                    "type": "string",
                    "example": "Request for information."
                  },
                  "classStandard": {
                    "type": "string",
                    "example": "10"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-01T12:00:00Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/requests/deleteRequests{id}": {
      "delete": {
        "tags": [
          "Requests"
        ],
        "summary": "Delete a request",
        "description": "Deletes a specific request by its ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the request to delete",
            "example": "req12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Request deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Request deleted"
                }
              }
            }
          },
          "404": {
            "description": "Request not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/requests/filter/search": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Filter requests by date and class",
        "description": "Fetches requests filtered by optional `date` and `classStandard` query parameters.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date",
            "description": "Filter by date (YYYY-MM-DD)",
            "example": "2025-04-01"
          },
          {
            "name": "classStandard",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by class standard",
            "example": "10"
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered list of requests",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "req12345"
                  },
                  "fullName": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "mobileNumber": {
                    "type": "string",
                    "example": "1234567890"
                  },
                  "schoolName": {
                    "type": "string",
                    "example": "XYZ School"
                  },
                  "message": {
                    "type": "string",
                    "example": "Need details about class 10"
                  },
                  "classStandard": {
                    "type": "string",
                    "example": "10"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-01T12:00:00Z"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  }
}